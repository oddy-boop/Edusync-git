
"use client";

import { useActionState } from "react";
import { useFormStatus } from "react-dom";
import { generateLessonPlanIdeasAction } from "@/lib/actions/teacher.actions";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from "@/components/ui/card";
import { Brain, Loader2, BookOpen, Clock, Users, Paperclip, CheckSquare, Target, GraduationCap } from "lucide-react";
import { SUBJECTS } from "@/lib/constants";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { useEffect, useRef, useState } from "react";
import type { LessonPlanIdeasOutput } from "@/ai/flows/lesson-plan-ideas"; 
import { Separator } from "../ui/separator";

const initialState: {
  message: string;
  data: LessonPlanIdeasOutput | null;
  errors?: { subject?: string[]; topic?: string[] };
} = {
  message: "",
  data: null,
  errors: undefined,
};

function SubmitButton() {
  const { pending } = useFormStatus();
  return (
    <Button type="submit" disabled={pending} className="w-full">
      {pending ? <Loader2 className="mr-2 h-4 w-4 animate-spin" /> : <Brain className="mr-2 h-4 w-4" />}
      {pending ? "Generating Lesson Plan..." : "Generate Lesson Plan"}
    </Button>
  );
}

export function LessonPlannerForm() {
  const [state, formAction] = useActionState(generateLessonPlanIdeasAction, initialState);
  const formRef = useRef<HTMLFormElement>(null);
  const [selectedSubject, setSelectedSubject] = useState("");

  useEffect(() => {
    if (state.message && state.data === null && !state.errors) {
      // Server error toast could go here
    }
  }, [state]);

  const lessonPlan = state.data;

  return (
    <div className="space-y-6">
      <Card className="shadow-lg">
        <CardHeader>
          <CardTitle className="flex items-center">
            <Brain className="mr-2 h-6 w-6 text-primary" />
            AI Lesson Planner Assistant
          </CardTitle>
          <CardDescription>
            Enter a subject and topic to get a complete, AI-powered lesson plan.
          </CardDescription>
        </CardHeader>
        <form action={formAction} ref={formRef}>
          <CardContent className="space-y-4">
            <div>
              <Label htmlFor="subject">Subject</Label>
              <Select name="subject" value={selectedSubject} onValueChange={setSelectedSubject}>
                <SelectTrigger id="subject">
                  <SelectValue placeholder="Select a subject" />
                </SelectTrigger>
                <SelectContent>
                  {SUBJECTS.map((subject) => (
                    <SelectItem key={subject} value={subject}>
                      {subject}
                    </SelectItem>
                  ))}
                </SelectContent>
              </Select>
              {state.errors?.subject && (
                <p className="text-sm font-medium text-destructive mt-1">{state.errors.subject[0]}</p>
              )}
            </div>
            <div>
              <Label htmlFor="topic">Topic</Label>
              <Input
                id="topic"
                name="topic"
                placeholder="e.g., Photosynthesis, Fractions, World War II"
              />
              {state.errors?.topic && (
                <p className="text-sm font-medium text-destructive mt-1">{state.errors.topic[0]}</p>
              )}
            </div>
          </CardContent>
          <CardFooter>
            <SubmitButton />
          </CardFooter>
        </form>
        {state.message && !state.data && !state.errors && (
            <CardFooter>
                <p className="text-sm text-destructive">{state.message}</p>
            </CardFooter>
        )}
      </Card>

      {lessonPlan ? (
        <Card className="shadow-xl">
          <CardHeader>
            <CardTitle className="text-2xl font-headline text-primary">{lessonPlan.title}</CardTitle>
            <CardDescription>A detailed lesson plan generated by AI.</CardDescription>
             <div className="grid grid-cols-2 md:grid-cols-4 gap-2 text-sm pt-2 text-muted-foreground">
                <div className="flex items-center gap-1.5"><Users className="h-4 w-4"/> Grade Level: {lessonPlan.grade_level}</div>
                <div className="flex items-center gap-1.5"><Clock className="h-4 w-4"/> Duration: {lessonPlan.duration}</div>
            </div>
          </CardHeader>
          <CardContent className="space-y-6">
            
            <Separator />
            
            <div>
              <h3 className="text-lg font-semibold flex items-center mb-2"><Target className="mr-2 h-5 w-5 text-accent"/>Learning Objectives</h3>
              <ul className="list-disc list-inside space-y-1 text-foreground/80 pl-2">
                {lessonPlan.learning_objectives.map((obj, i) => <li key={i}>{obj}</li>)}
              </ul>
            </div>
            
            {lessonPlan.materials && lessonPlan.materials.length > 0 && (
                <div>
                    <h3 className="text-lg font-semibold flex items-center mb-2"><Paperclip className="mr-2 h-5 w-5 text-accent"/>Materials</h3>
                    <ul className="list-disc list-inside space-y-1 text-foreground/80 pl-2">
                    {lessonPlan.materials.map((mat, i) => <li key={i}>{mat}</li>)}
                    </ul>
                </div>
            )}

            <div>
              <h3 className="text-lg font-semibold flex items-center mb-2"><BookOpen className="mr-2 h-5 w-5 text-accent"/>Lesson Activities</h3>
              <div className="space-y-4">
                {lessonPlan.activities.map((activity) => (
                  <div key={activity.step} className="pl-4 border-l-2 border-primary/20">
                    <p className="font-semibold">{activity.step}. {activity.title} <span className="text-sm text-muted-foreground font-normal">({activity.duration})</span></p>
                    <p className="text-sm text-foreground/80 mt-1 whitespace-pre-wrap">{activity.description}</p>
                  </div>
                ))}
              </div>
            </div>

            <div>
              <h3 className="text-lg font-semibold flex items-center mb-2"><CheckSquare className="mr-2 h-5 w-5 text-accent"/>{lessonPlan.assessment.title}</h3>
              <ul className="list-disc list-inside space-y-1 text-foreground/80 pl-2">
                {lessonPlan.assessment.methods.map((method, i) => <li key={i}>{method}</li>)}
              </ul>
            </div>

            <div>
              <h3 className="text-lg font-semibold flex items-center mb-2"><GraduationCap className="mr-2 h-5 w-5 text-accent"/>{lessonPlan.differentiation.title}</h3>
              <div className="space-y-2">
                <div>
                    <p className="font-semibold text-sm">Support for Struggling Learners</p>
                    <p className="text-sm text-foreground/80 whitespace-pre-wrap">{lessonPlan.differentiation.support_for_struggling_learners}</p>
                </div>
                <div>
                    <p className="font-semibold text-sm">Challenge for Advanced Learners</p>
                    <p className="text-sm text-foreground/80 whitespace-pre-wrap">{lessonPlan.differentiation.challenge_for_advanced_learners}</p>
                </div>
              </div>
            </div>
            
          </CardContent>
        </Card>
      ) : (
         <Card className="shadow-lg min-h-[200px]">
            <CardHeader>
                <CardTitle>Generated Lesson Plan</CardTitle>
                <CardDescription>Your comprehensive lesson plan will appear here.</CardDescription>
            </CardHeader>
            <CardContent>
                <div className="flex items-center justify-center h-full min-h-[100px] text-muted-foreground">
                    <p>No lesson plan generated yet. Fill out the form and click generate.</p>
                </div>
            </CardContent>
         </Card>
      )}
    </div>
  );
}
